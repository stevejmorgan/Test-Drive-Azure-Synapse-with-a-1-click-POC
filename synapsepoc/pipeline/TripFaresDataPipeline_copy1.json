{
	"name": "TripFaresDataPipeline_copy1",
	"properties": {
		"activities": [
			{
				"name": "Copy data Trips Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"preCopyScript": "IF (EXISTS (SELECT *\n  FROM INFORMATION_SCHEMA.TABLES\n  WHERE TABLE_SCHEMA = 'dbo'\n  AND TABLE_NAME = 'TripsData'))\nBEGIN \n   Truncate table TripsData;\nEnd\n",
						"allowPolyBase": true,
						"polyBaseSettings": {
							"rejectValue": 0,
							"rejectType": "value",
							"useTypeDefault": true
						},
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "TripFaresDataLakeStorageLinkedService",
							"type": "LinkedServiceReference",
							"parameters": {
								"keyVaultName": {
									"value": "@pipeline().parameters.KeyVaultName",
									"type": "Expression"
								},
								"datalakeAccountName": {
									"value": "@pipeline().parameters.datalakeAccountName",
									"type": "Expression"
								}
							}
						}
					}
				},
				"inputs": [
					{
						"referenceName": "tripsDataSource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSynapseAnalyticsTripsData",
						"type": "DatasetReference",
						"parameters": {
							"SynapseWorkspaceName": {
								"value": "@pipeline().parameters.SynapseWorkspaceName",
								"type": "Expression"
							},
							"SQLDedicatedPoolName": {
								"value": "@pipeline().parameters.SQLDedicatedPoolName",
								"type": "Expression"
							},
							"keyVaultName": {
								"value": "@pipeline().parameters.KeyVaultName",
								"type": "Expression"
							},
							"SQLLoginUsername": {
								"value": "@pipeline().parameters.SQLLoginUsername",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"SchemaName": {
				"type": "string",
				"defaultValue": "tripFares"
			},
			"SynapseWorkspaceName": {
				"type": "string",
				"defaultValue": "sjmcoj3vsap5byjlp4pocws1.database.net"
			},
			"SQLDedicatedPoolName": {
				"type": "string",
				"defaultValue": "sjmcoj3vsap5byjlp4pocws1/sjmcoj3vsap5byjlp4pocws1p1"
			},
			"SQLLoginUsername": {
				"type": "string",
				"defaultValue": "stmorganAdmin"
			},
			"KeyVaultName": {
				"type": "string",
				"defaultValue": "kvsjmcoj3vsap5byjlp4poc"
			},
			"datalakeAccountName": {
				"type": "string",
				"defaultValue": "sjmcoj3vsap5byjlp4poc"
			}
		},
		"folder": {
			"name": "TripFaresDataPipeline"
		},
		"annotations": []
	}
}